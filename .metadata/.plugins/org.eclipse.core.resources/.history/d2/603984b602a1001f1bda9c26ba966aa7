package fr.insa.ms.userInfoService.config;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import fr.insa.ms.userInfoService.model.UserInfos;
import fr.insa.ms.userInfoService.model.UserInfos.HelpStatus;


public class NewUser {


    public void addNewUser(UserInfos user) throws SQLException {
        Connection connection = DatabaseConnection.getConnection();
        try {
            String insertQuery = "INSERT INTO Users (id, firstName, lastName, location, helpStatus) VALUES (?, ?, ?, ?, ?)";
            // Using PreparedStatement to prevent SQL injection
            try (PreparedStatement preparedStatement = connection.prepareStatement(insertQuery)) {
          
                preparedStatement.setInt(1, user.getId());
                preparedStatement.setString(2, user.getFirstName());
                preparedStatement.setString(3, user.getLastName());
                preparedStatement.setString(4, user.getLocation());
                preparedStatement.setString(5, user.getHelpStatus().name()); // Store enum as a string


                preparedStatement.executeUpdate();
                System.out.println("User added successfully");


            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle the exception
        }
    }

    public static UserInfos getUserByLocationAndStatus(String lastName, String password) throws SQLException {
        Connection connection = DatabaseConnection.getConnection();
        String sql = "SELECT * FROM Users WHERE lastName = ? AND password = ?";
        
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setString(1, lastName);
            statement.setString(2, password);
            
            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                   return resultSet.getInt("id");


                    return user;
                } else {
                    System.out.println("No matching user found.");
                    return null;
                }
            }
        } catch (SQLException e) {
            System.out.println("SQLException :" + e.getMessage());
            return null;
        }
    }
}
